{"version":3,"sources":["features/util/P5Wrapper.js","features/sketch/sketch.js","features/util/withDragMe.js","features/appMenu/appMenu.js","features/toolbars/toolbar.js","features/toolbars/brushToolbar.js","features/toolbars/colorPickerBar.js","features/App.js","serviceWorker.js","index.js"],"names":["P5Wrapper","this","canvas","p5","props","sketch","wrapper","myCustomRedrawAccordingToNewPropsHandler","newprops","removeChild","childNodes","_this","brushSize","brush","radius","cursor","styles","cursor100","cursor75","cursor50","cursor25","react_default","a","createElement","style","ref","React","Component","p","fillColor","brushRadius","setup","createCanvas","P2D","background","saveImage","saveCanvas","resetStatetoDefault","clearCanvas","draw","mouseIsPressed","fill","ellipse","mouseX","mouseY","noFill","noStroke","util_withDragMe","WrappedComponent","id","position","_Component","withDragMe","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","myRef","createRef","inherits","createClass","key","value","dragElement","current","elmnt","pos1","pos2","pos3","pos4","elementDrag","e","window","event","preventDefault","clientX","clientY","top","offsetTop","left","offsetLeft","closeDragElement","document","onmouseup","onmousemove","getElementById","onmousedown","objectSpread","myDiv","myDivHeader","dot","zIndex","backgroundColor","textAlign","border","padding","color","display","justifyContent","height","width","borderRadius","margin","MenuBar","state","anchorEl","handleClick","setState","currentTarget","handleClose","classes","open","Boolean","className","container","headerName","index_es","headerTextEffect","onClick","buttonTextEffect","disabled","onClose","anchorOrigin","vertical","horizontal","transformOrigin","typography","href","target","withStyles","theme","palette","default","textDecoration","userSelect","fontWeight","&:hover","spacing","unit","BrushToolBar","selectedTool","handleAlignment","toggleContainer","lab_index_es","root","exclusive","onChange","title","placement","icons_index_es","onDownloadImage","trashIcon","onClearCanvas","concat","alignItems","flexDirection","BrushToolbar","brushValue","strokeValue","handleBrushChange","onUpdateBrushRadius","handleStrokeChange","_this$state","sliderContainer","slider","Math","round","ColorPickerBar","onColorSelected","hex","colorPicker","colorPickerSetup","Picker","parent","rgbaString","popup","ToolbarWithDragMe","Toolbar","P5WrapperWithDragMe","BrushToolbarWithDragMe","ColorPickerBarWithDragMe","App","context","defineProperty","getInitialState","stroke","strokeColor","appMenu","location","hostname","match","ReactDOM","render","src_features_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acf855eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport p5 from 'p5';\r\n\r\nexport default class P5Wrapper extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.canvas = new p5(this.props.sketch, this.wrapper);\r\n    if( this.canvas.myCustomRedrawAccordingToNewPropsHandler ) {\r\n      this.canvas.myCustomRedrawAccordingToNewPropsHandler(this.props);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newprops) {\r\n    if(this.props.sketch !== newprops.sketch){\r\n      this.wrapper.removeChild(this.wrapper.childNodes[0]);\r\n      this.canvas = new p5(newprops.sketch, this.wrapper);\r\n    }\r\n    if( this.canvas.myCustomRedrawAccordingToNewPropsHandler ) {\r\n      this.canvas.myCustomRedrawAccordingToNewPropsHandler(newprops);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const brushSize = this.props.brush.radius || 0;\r\n    const cursor = brushSize > 75 ? styles.cursor100 : brushSize > 50 ? styles.cursor75 : brushSize > 25 ? styles.cursor50 : styles.cursor25;\r\n    return <div style={cursor} ref={wrapper => this.wrapper = wrapper}></div>;\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  cursor25: {\r\n    cursor: \"url(cursors/cursor25.png) 12 12, auto\"\r\n  },\r\n  cursor50: {\r\n    cursor: \"url(cursors/cursor50.png) 25 25, auto\"\r\n  },\r\n  cursor75: {\r\n    cursor: \"url(cursors/cursor75.png) 35 35, auto\"\r\n  },\r\n  cursor100: {\r\n    cursor: \"url(cursors/cursor100.png) 50 50, auto\"\r\n  }\r\n};","export default function sketch(p) {\r\n    var fillColor = \"#4286f4\"; //staring color\r\n    // var strokeColor = \"#4286f4\"; //staring stroke color\r\n    var brushRadius = 40; //starting brush size\r\n  \r\n    p.setup = function() {\r\n      p.createCanvas(500, 400, p.P2D);\r\n      p.background('white');\r\n    };\r\n  \r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n      if(props.saveImage) {\r\n        p.saveCanvas(\"mydrawing\", \"jpg\");\r\n        props.resetStatetoDefault(\"saveImage\");\r\n      }\r\n      if(props.clearCanvas) {\r\n        p.background('white');\r\n        props.resetStatetoDefault(\"clearCanvas\");\r\n      }\r\n      if(props.brush) {\r\n        brushRadius = props.brush.radius;\r\n        fillColor = props.brush.fillColor;\r\n      }\r\n    };\r\n  \r\n    p.draw = function() {\r\n      if (p.mouseIsPressed) {\r\n        p.fill(fillColor);\r\n        p.ellipse(p.mouseX, p.mouseY, brushRadius, brushRadius, 50);\r\n        // p.rect(p.mouseX, p.mouseY, brushRadius, brushRadius);\r\n        // p.stroke(strokeColor);\r\n        // p.filter( p.BLUR, 6 ); //slow as fudge\r\n      } else {\r\n        p.noFill();\r\n        p.noStroke();\r\n      }\r\n    };\r\n  }\r\n  ","// HOC that makes component draggable on screen\r\nimport React, {Component} from 'react';\r\n\r\nexport default function(WrappedComponent, id, position) {\r\n    class withDragMe extends Component {\r\n      constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n      }\r\n  \r\n      componentDidMount() {\r\n        this.dragElement(this.myRef.current)\r\n      }\r\n      dragElement(elmnt) {\r\n          var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n          if (document.getElementById(id)) {\r\n            /* if present, the header is where you move the DIV from:*/\r\n            document.getElementById(id).onmousedown = dragMouseDown;\r\n          } \r\n          // else {\r\n          //   /* otherwise, move the DIV from anywhere inside the DIV:*/\r\n          //   elmnt.onmousedown = dragMouseDown;\r\n          // }\r\n        \r\n          function dragMouseDown(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            // get the mouse cursor position at startup:\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            document.onmouseup = closeDragElement;\r\n            // call a function whenever the cursor moves:\r\n            document.onmousemove = elementDrag;\r\n          }\r\n        \r\n          function elementDrag(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            // calculate the new cursor position:\r\n            pos1 = pos3 - e.clientX;\r\n            pos2 = pos4 - e.clientY;\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            // set the element's new position:\r\n            elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\r\n            elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\r\n            // elmnt.style.position = \"absolute\";\r\n          }\r\n        \r\n          function closeDragElement() {\r\n            /* stop moving when mouse button is released:*/\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n          }\r\n        }\r\n      render() {\r\n        return (\r\n          <div style={{...styles.myDiv, top: position.top, left: position.left}} ref={this.myRef}>\r\n            <div style={styles.myDivHeader} id={id}>\r\n              <div style={styles.dot} />\r\n              <div style={styles.dot} />\r\n              <div style={styles.dot} />\r\n            </div>\r\n            <WrappedComponent {...this.props} />\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n    return withDragMe;\r\n  }\r\n\r\n  const styles = {\r\n    myDiv: {\r\n      position: \"absolute\",\r\n      zIndex: 9,\r\n      backgroundColor: \"#f1f1f1\",\r\n      textAlign: \"center\",\r\n      border: \"1px solid #d3d3d3\",\r\n      // height: \"auto\",\r\n      // width: \"auto\",\r\n      // display: \"inline-block\",\r\n      // top: 5,\r\n      // left: 5\r\n    },\r\n    myDivHeader: {\r\n      padding: 5,\r\n      cursor: \"move\",\r\n      zIndex: 10,\r\n      backgroundColor: \"#2196F3\",\r\n      color: \"#fff\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\"\r\n    },\r\n    dot: {\r\n      backgroundColor: \"white\",\r\n      height: 5,\r\n      width: 5,\r\n      borderRadius: 10,\r\n      margin: \"0 3px\"\r\n    }\r\n  }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, Popover, Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    background: theme.palette.background.default,\r\n  },\r\n  buttonTextEffect: {\r\n    textDecoration: \"underline\"\r\n  },\r\n  headerTextEffect: {\r\n    color: \"gold\",\r\n    userSelect: \"none\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      background: \"none\"\r\n    }\r\n  },\r\n  typography: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass MenuBar extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      anchorEl: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.headerName}>\r\n          <Button className={classes.headerTextEffect} onClick={this.handleClick}>[ MIDAS ]</Button>\r\n        </div>\r\n        <div>\r\n          <Button className={classes.buttonTextEffect} disabled>File</Button>\r\n          <Button className={classes.buttonTextEffect} disabled>Edit</Button>\r\n          <Button className={classes.buttonTextEffect} disabled>Select</Button>\r\n        </div>\r\n        <Popover\r\n          id=\"simple-popper\"\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={this.handleClose}\r\n          anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\r\n          transformOrigin={{vertical: 'top', horizontal: 'center'}}\r\n        >\r\n          <div>\r\n            <Typography className={classes.typography}>Midas Drawing App</Typography>\r\n            <Typography className={classes.typography}>Built using P5 Processing</Typography>\r\n            <div style={{display: \"flex\"}}>\r\n              <Typography className={classes.typography}>Rodney Gordon</Typography>\r\n              <Typography className={classes.typography}>\r\n                <a href=\"https://github.com/phaonaut/midas\" target=\"blank\">github repo</a>\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenuBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MenuBar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Tooltip, withStyles} from '@material-ui/core';\r\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\r\nimport {Brush as BrushIcon, Colorize as ColorizeIcon, ColorLens as ColorLensIcon,\r\n        Crop as CropIcon, DeleteForever as DeleteForeverIcon, Edit as EditIcon,\r\n        FormatColorFill as FormatColorFillIcon, SaveAlt as SaveAltIcon, Save as SaveIcon} from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n  toggleContainer: {\r\n    // height: 56,\r\n    // width: 200,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit}px`,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    margin: `${theme.spacing.unit / 2}px`,\r\n    background: theme.palette.background.default,\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  trashIcon: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"red\"\r\n    }\r\n  }\r\n});\r\n\r\nclass BrushToolBar extends React.Component {\r\n  state = {\r\n    selectedTool: 'brush'\r\n  };\r\n\r\n  handleAlignment = (event, selectedTool) => this.setState({ selectedTool });\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { selectedTool } = this.state;\r\n\r\n    return (\r\n      <div className={classes.toggleContainer}>\r\n        <ToggleButtonGroup className={classes.root} value={selectedTool} exclusive onChange={this.handleAlignment}>\r\n          <ToggleButton value=\"brush\">\r\n            <Tooltip title=\"Brush\" placement=\"right\">\r\n              <BrushIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n          \r\n          <ToggleButton value=\"edit\" disabled>\r\n            <Tooltip title=\"Pencil\" placement=\"right\">\r\n              <EditIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n          \r\n          <ToggleButton value=\"colorize\" disabled>\r\n            <Tooltip title=\"Color Picker\" placement=\"right\">\r\n              <ColorizeIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n          \r\n          <ToggleButton value=\"crop\" disabled>\r\n            <Tooltip title=\"Crop\" placement=\"right\">\r\n              <CropIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n          \r\n          <ToggleButton value=\"colorlens\" disabled>\r\n            <Tooltip title=\"Color Palette\" placement=\"right\">\r\n              <ColorLensIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n\r\n          <ToggleButton value=\"formatcolorfill\" disabled>\r\n            <Tooltip title=\"Color Fill\" placement=\"right\">\r\n              <FormatColorFillIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n\r\n          <ToggleButton disabled value=\"blankspace\" />\r\n          \r\n          <ToggleButton value=\"savealt\" onClick={this.props.onDownloadImage}>\r\n            <Tooltip title=\"Download Image\" placement=\"left\">\r\n              <SaveAltIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n\r\n          <ToggleButton value=\"save\" disabled>\r\n            <Tooltip title=\"Brush\" placement=\"left\">\r\n              <SaveIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n          \r\n          <ToggleButton disabled value=\"blankspace\" />\r\n          \r\n          <ToggleButton value=\"deleteforever\" className={classes.trashIcon} onClick={this.props.onClearCanvas}>\r\n            <Tooltip title=\"Clear Canvas\" placement=\"right\">\r\n              <DeleteForeverIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n\r\n        </ToggleButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBrushToolBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDownloadImage: PropTypes.func.isRequired,\r\n  onClearCanvas: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(BrushToolBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography, withStyles } from '@material-ui/core';\r\nimport { Slider } from '@material-ui/lab';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    width: 300,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit}px`,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: \"column\",\r\n    margin: `${theme.spacing.unit / 2}px`,\r\n    background: theme.palette.background.default,\r\n  },\r\n  sliderContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    width: \"100%\"\r\n  },\r\n  slider: {\r\n    margin: \"0 5px\",\r\n    padding: '12px 0px',\r\n  },\r\n});\r\n\r\nclass BrushToolbar extends React.Component {\r\n  state = {\r\n    brushValue: 50,\r\n    strokeValue: 0,\r\n  };\r\n\r\n  handleBrushChange = (event, brushValue) => {\r\n    this.setState({ brushValue });\r\n    this.props.onUpdateBrushRadius(brushValue);\r\n  };\r\n\r\n  handleStrokeChange = (event, strokeValue) => {\r\n    this.setState({ strokeValue });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { brushValue, strokeValue } = this.state;\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.sliderContainer}>\r\n          <Typography>Radius</Typography>\r\n          <Slider\r\n            classes={{ container: classes.slider }}\r\n            value={brushValue}\r\n            onChange={this.handleBrushChange}\r\n            />\r\n          <Typography>{Math.round(brushValue)}</Typography>\r\n        </div>\r\n        <div className={classes.sliderContainer}>\r\n          <Typography>Stroke</Typography>\r\n          <Slider\r\n            classes={{ container: classes.slider }}\r\n            value={strokeValue}\r\n            onChange={this.handleStrokeChange}\r\n            disabled\r\n            />\r\n          <Typography>{Math.round(strokeValue)}</Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBrushToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  brushRadius: PropTypes.number.isRequired,\r\n  onUpdateBrushRadius: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(BrushToolbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Picker from 'vanilla-picker';\r\nimport { withStyles } from '@material-ui/core';\r\nimport {ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: \"column\",\r\n    background: theme.palette.background.default,\r\n  },\r\n  toggleContainer: {\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit}px`,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    background: theme.palette.background.default,\r\n  }\r\n});\r\n\r\nclass ColorPickerBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.colorPicker = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.colorPickerSetup(this.colorPicker.current, this.onColorSelected)\r\n  }\r\n  onColorSelected = color => {\r\n    this.props.onColorSelected(color.hex);\r\n  }\r\n  colorPickerSetup(ref, onColorSelected ) {\r\n    var picker = new Picker({\r\n      parent: ref,\r\n      color: 'gold',\r\n      onChange: function(color) {\r\n                    ref.style.backgroundColor = color.rgbaString;\r\n                    onColorSelected(color);\r\n      },\r\n      popup: false\r\n      });\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container}>\r\n          <div className={classes.toggleContainer}>\r\n            <ToggleButtonGroup value=\"brush\" exclusive>\r\n              <ToggleButton value=\"brush\">Brush</ToggleButton>\r\n              <ToggleButton value=\"stroke\" disabled>Stroke</ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </div>\r\n        <div ref={this.colorPicker} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nColorPickerBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onColorSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ColorPickerBar);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport P5Wrapper from \"./util/P5Wrapper\";\r\nimport sketch from \"./sketch/sketch\";\r\nimport withDragMe from \"./util/withDragMe\";\r\nimport AppMenu from \"./appMenu/appMenu\";\r\nimport Toolbar from \"./toolbars/toolbar\";\r\nimport BrushToolbar from \"./toolbars/brushToolbar\";\r\nimport ColorPickerBar from \"./toolbars/colorPickerBar\";\r\n\r\nconst ToolbarWithDragMe = withDragMe(Toolbar, \"toolbar\", {top: 5, left: 5});\r\nconst P5WrapperWithDragMe = withDragMe(P5Wrapper, \"p5wrapper\", {top: 5, left: 100});\r\nconst BrushToolbarWithDragMe = withDragMe(BrushToolbar, \"brushtoolbar\", {top: 500, left: 50});\r\nconst ColorPickerBarWithDragMe = withDragMe(ColorPickerBar, \"colorpickerbar\", {top: 5, left: 620});\r\n\r\nclass App extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = this.getInitialState();\r\n  }\r\n  getInitialState() {\r\n    return {\r\n      saveImage: false,\r\n      clearCanvas: false,\r\n      brush: {\r\n        radius: 50,\r\n        stroke: 0,\r\n        fillColor: 'gold',\r\n        strokeColor: null\r\n      }\r\n    };\r\n  }\r\n  onDownloadImage = () => {\r\n    this.setState({saveImage: true});\r\n  }\r\n  onClearCanvas = () => {\r\n    this.setState({clearCanvas: true});\r\n  }\r\n  onUpdateBrushRadius = value => {\r\n    this.setState({...this.state, brush: {...this.state.brush, radius: value}});\r\n  }\r\n  onColorSelected = value => {\r\n    this.setState({...this.state, brush: {...this.state.brush, fillColor: value}});\r\n  }\r\n  resetStatetoDefault = state => {\r\n    this.setState({[state]: this.getInitialState()[state]});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <AppMenu/>\r\n        <div style={{position: \"relative\"}}>\r\n          <ToolbarWithDragMe\r\n            onDownloadImage={this.onDownloadImage}\r\n            onClearCanvas={this.onClearCanvas}\r\n          />\r\n          <P5WrapperWithDragMe\r\n            sketch={sketch}\r\n            saveImage={this.state.saveImage}\r\n            clearCanvas={this.state.clearCanvas}\r\n            brush={this.state.brush}\r\n            resetStatetoDefault={this.resetStatetoDefault}\r\n          />\r\n          <BrushToolbarWithDragMe\r\n            onUpdateBrushRadius={this.onUpdateBrushRadius}\r\n            brushRadius={this.state.brushRadius}\r\n          />\r\n          <ColorPickerBarWithDragMe\r\n            onColorSelected={this.onColorSelected}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './features/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}